{
  "openapi": "3.0.0",
  "info": {
    "title": "COVID Modeling",
    "description": "The COVID Modeling UI was developed to help policy makers explore hypothetical intervention strategies to reduce the impact of COVID-19. It provides a common interface and language to run simulations against multiple models at the same time. This API is intended to facilitate automation, e.g. running weekly simulations with the same parameters, and integration with other tools.",
    "version": "0.0.6",
    "license": {"name": "MIT License", "url": "https://mit-license.org/"}
  },
  "servers": [{"url": "/api"}],
  "security": [{"token": [], "session": []}],
  "tags": [
    {
      "name": "simulations",
      "description": "Running simulations and retrieving results"
    },
    {"name": "users", "description": "User management and authentication"}
  ],
  "paths": {
    "/simulations": {
      "get": {
        "description": "Retrieves list of simulations",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/components/schemas/SimulationSummary"}
                }
              }
            }
          }
        },
        "operationId": "getSimulations",
        "tags": ["simulations"]
      },
      "post": {
        "description": "Schedule new simulation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/NewSimulationConfig"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "required": ["id"],
                  "properties": {"id": {"type": "integer"}}
                }
              }
            }
          },
          "422": {
            "description": "Invalid configuration",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "required": ["error"],
                  "properties": {"error": {"type": "string"}}
                }
              }
            }
          }
        },
        "operationId": "postSimulations",
        "tags": ["simulations"]
      }
    },
    "/user/token": {
      "post": {
        "description": "Generates API token for use in other API endpoints.\nPlease note that generating a new token will invalidate any existing tokens.\nYou should not share your token, and should keep your token safe and secure, e.g. using a password manager.\nYour token cannot be retrieved if it is lost, it must be regenerated.",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "required": ["token"],
                  "properties": {"token": {"type": "string"}}
                }
              }
            }
          }
        },
        "operationId": "getUserToken",
        "tags": ["users"]
      }
    },
    "/simulations/{id}/case-summary": {
      "get": {
        "description": "Retrieves summary result of simulation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Simulation ID",
            "schema": {"type": "integer"},
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {"$ref": "#/components/schemas/CaseSummary"}
              }
            }
          }
        },
        "operationId": "getSimulationCaseSummary",
        "tags": ["simulations"]
      }
    },
    "/simulations/{id}/download": {
      "get": {
        "description": "Downloads full result of simulation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Simulation ID",
            "schema": {"type": "integer"},
            "example": 2
          },
          {
            "in": "query",
            "name": "model",
            "required": true,
            "description": "Model slug",
            "schema": {"type": "string"},
            "example": "mrc-ide-covid-sim"
          }
        ],
        "responses": {
          "307": {
            "description": "Successful redirect",
            "headers": {
              "Location": {
                "description": "The URL to download results from",
                "schema": {"type": "string"}
              }
            }
          }
        },
        "operationId": "getSimulationDownload",
        "tags": ["simulations"]
      }
    },
    "/simulations/{id}/export": {
      "get": {
        "description": "Downloads full result of simulation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Simulation ID",
            "schema": {"type": "integer"},
            "example": 84
          },
          {
            "in": "query",
            "name": "model",
            "required": true,
            "description": "Model slug",
            "schema": {"type": "string"},
            "example": "mrc-ide-covid-sim"
          },
          {
            "in": "query",
            "name": "format",
            "description": "Export format",
            "default": "crystalcast",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/ExportFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful CrystalCast export",
            "content": {
              "text/csv": {
                "schema": {"type": "string"},
                "examples": {
                  "success": {"externalValue": "/export-example.csv"}
                }
              }
            }
          }
        },
        "operationId": "getSimulationExport",
        "tags": ["simulations"]
      }
    }
  },
  "components": {
    "schemas": {
      "CaseSummary": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "properties": {
            "cConf": {"type": "number"},
            "cHosp": {"type": "number"},
            "cDeaths": {"type": "number"},
            "peakDeath": {"$ref": "#/components/schemas/ISODate"},
            "peakDailyDeath": {"type": "number"},
            "modelVersion": {"type": "string"}
          },
          "required": [
            "cConf",
            "cHosp",
            "cDeaths",
            "peakDeath",
            "peakDailyDeath"
          ],
          "additionalProperties": false
        }
      },
      "ExportFormat": {"type": "string", "enum": ["crystalcast"]},
      "Intensity": {
        "type": "string",
        "enum": ["aggressive", "moderate", "mild"]
      },
      "InterventionPeriod": {
        "type": "object",
        "properties": {
          "startDate": {
            "$ref": "#/components/schemas/ISODate",
            "description": "An ISO-8601 string encoding the date that these interventions begin."
          },
          "socialDistancing": {
            "$ref": "#/components/schemas/Intensity",
            "description": "The level of social distancing in the region."
          },
          "schoolClosure": {
            "$ref": "#/components/schemas/Intensity",
            "description": "The level of school closure in the region."
          },
          "caseIsolation": {
            "$ref": "#/components/schemas/Intensity",
            "description": "The level to which individuals with symptoms self-isolate."
          },
          "voluntaryHomeQuarantine": {
            "$ref": "#/components/schemas/Intensity",
            "description": "The level to which entire households self-isolate when one member\nof the household has symptoms."
          },
          "reductionPopulationContact": {
            "type": "number",
            "description": "The estimated reduction in population contact resulting from\nall of the above interventions. Some models require this generalized\nparameter instead of the individual interventions."
          }
        },
        "required": ["startDate", "reductionPopulationContact"],
        "additionalProperties": false
      },
      "ISODate": {"type": "string", "format": "date", "example": "2020-03-06"},
      "ModelRun": {
        "type": "object",
        "properties": {
          "model_slug": {"type": "string"},
          "status": {"$ref": "#/components/schemas/RunStatus"},
          "results_data": {"type": "string", "nullable": true},
          "export_location": {"type": "string", "nullable": true}
        },
        "required": ["model_slug", "status", "results_data", "export_location"],
        "additionalProperties": false
      },
      "NewSimulationConfig": {
        "type": "object",
        "properties": {
          "regionID": {"$ref": "#/components/schemas/Region"},
          "subregionID": {"$ref": "#/components/schemas/Subregion"},
          "label": {"type": "string"},
          "r0": {"type": "number", "example": 1},
          "customCalibrationDate": {"$ref": "#/components/schemas/ISODate"},
          "interventionPeriods": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/InterventionPeriod"}
          }
        },
        "required": ["regionID", "label", "interventionPeriods"],
        "additionalProperties": false,
        "description": "The data sent from web UI to backend"
      },
      "Region": {"type": "string", "example": "US"},
      "RunStatus": {
        "type": "string",
        "enum": ["pending", "in-progress", "complete", "unsupported", "failed"]
      },
      "SimulationSummary": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {"$ref": "#/components/schemas/RunStatus"},
          "configurationSummary": {"type": "string"},
          "id": {"type": "number"},
          "region_name": {"type": "string"},
          "subregion_name": {"type": "string"},
          "region_id": {"type": "string"},
          "subregion_id": {"type": "string"},
          "github_user_id": {"type": "number"},
          "github_user_login": {"type": "string"},
          "model_runs": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/ModelRun"}
          },
          "label": {"type": "string"},
          "created_at": {"type": "string"},
          "updated_at": {"type": "string"}
        },
        "required": [
          "configurationSummary",
          "created_at",
          "github_user_id",
          "github_user_login",
          "id",
          "label",
          "model_runs",
          "region_id",
          "region_name",
          "status",
          "updated_at"
        ]
      },
      "Subregion": {"type": "string", "example": "US-AK"}
    },
    "securitySchemes": {
      "token": {
        "type": "http",
        "in": "header",
        "name": "Authorization",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Primary authentication method for programmatic use."
      },
      "session": {
        "type": "http",
        "in": "cookie",
        "name": "session",
        "description": "For use in UI. Also requires valid session.sig cookie"
      }
    }
  }
}
