{
  "openapi": "3.0.0",
  "info": {
    "title": "COVID Modeling",
    "description": "The COVID Modeling UI was developed to help policy makers explore hypothetical intervention strategies to reduce the impact of COVID-19. It provides a common interface and language to run simulations against multiple models at the same time. This API is intended to facilitate automation, e.g. running weekly simulations with the same parameters, and integration with other tools.",
    "version": "0.0.6",
    "license": {"name": "MIT License", "url": "https://mit-license.org/"}
  },
  "servers": [{"url": "/api"}],
  "security": [{"token": [], "session": []}],
  "tags": [
    {
      "name": "simulations",
      "description": "Running simulations and retrieving results"
    },
    {"name": "users", "description": "User management and authentication"}
  ],
  "paths": {
    "/simulations": {
      "get": {
        "description": "Retrieves list of simulations",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/components/schemas/SimulationSummary"}
                }
              }
            }
          }
        },
        "operationId": "getSimulations",
        "tags": ["simulations"]
      },
      "post": {
        "description": "Schedule new simulation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {"$ref": "#/components/schemas/NewModelRunConfig"},
                  {"$ref": "#/components/schemas/NewSimulationConfig"}
                ]
              },
              "examples": {
                "custom": {
                  "summary": "Run simulation for a specific model with custom parameters",
                  "value": {
                    "model_slug": "mrc-ide-covidsim",
                    "config": {
                      "region": "US",
                      "subregion": "US-AK",
                      "parameters": {
                        "calibrationDate": "2020-03-06",
                        "calibrationCaseCount": 0,
                        "calibrationDeathCount": 0,
                        "r0": null,
                        "interventionPeriods": [
                          {
                            "startDate": "2020-03-06",
                            "socialDistancing": "aggressive",
                            "schoolClosure": "aggressive",
                            "caseIsolation": "aggressive",
                            "voluntaryHomeQuarantine": "aggressive",
                            "reductionPopulationContact": 0
                          }
                        ]
                      }
                    }
                  }
                },
                "common": {
                  "summary": "Run simulations with multiple models using the common format",
                  "value": {
                    "regionID": "US",
                    "subregionID": "US-AK",
                    "label": "Simulation",
                    "customCalibrationDate": "2020-03-06",
                    "interventionPeriods": [
                      {
                        "startDate": "2020-03-06",
                        "socialDistancing": "aggressive",
                        "schoolClosure": "aggressive",
                        "caseIsolation": "aggressive",
                        "voluntaryHomeQuarantine": "aggressive",
                        "reductionPopulationContact": 0
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "required": ["id"],
                  "properties": {"id": {"type": "integer"}}
                }
              }
            }
          },
          "422": {
            "description": "Invalid configuration",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "required": ["error"],
                  "properties": {"error": {"type": "string"}}
                }
              }
            }
          }
        },
        "operationId": "postSimulations",
        "tags": ["simulations"]
      }
    },
    "/user/token": {
      "post": {
        "description": "Generates API token for use in other API endpoints.\nPlease note that generating a new token will invalidate any existing tokens.\nYou should not share your token, and should keep your token safe and secure, e.g. using a password manager.\nYour token cannot be retrieved if it is lost, it must be regenerated.",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "required": ["token"],
                  "properties": {"token": {"type": "string"}}
                }
              }
            }
          }
        },
        "operationId": "getUserToken",
        "tags": ["users"]
      }
    },
    "/simulations/{id}/case-summary": {
      "get": {
        "description": "Retrieves summary result of simulation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Simulation ID",
            "schema": {"type": "integer"},
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {"$ref": "#/components/schemas/CaseSummary"}
              }
            }
          }
        },
        "operationId": "getSimulationCaseSummary",
        "tags": ["simulations"]
      }
    },
    "/simulations/{id}/download": {
      "get": {
        "description": "Downloads full result of simulation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Simulation ID",
            "schema": {"type": "integer"},
            "example": 2
          },
          {
            "in": "query",
            "name": "model",
            "required": true,
            "description": "Model slug",
            "schema": {"type": "string"},
            "example": "mrc-ide-covid-sim"
          }
        ],
        "responses": {
          "307": {
            "description": "Successful redirect",
            "headers": {
              "Location": {
                "description": "The URL to download results from",
                "schema": {"type": "string"}
              }
            }
          }
        },
        "operationId": "getSimulationDownload",
        "tags": ["simulations"]
      }
    },
    "/simulations/{id}/export": {
      "get": {
        "description": "Downloads full result of simulation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Simulation ID",
            "schema": {"type": "integer"},
            "example": 84
          },
          {
            "in": "query",
            "name": "model",
            "required": true,
            "description": "Model slug",
            "schema": {"type": "string"},
            "example": "mrc-ide-covid-sim"
          },
          {
            "in": "query",
            "name": "format",
            "description": "Determines what data and media type to return:\n \n * results -> application/json\n * crystalcast -> text/csv",
            "default": "results",
            "schema": {
              "type": "string",
              "$ref": "#/components/schemas/ExportFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful export",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {"$ref": "#/components/schemas/ModelOutput"}
              },
              "text/csv": {
                "schema": {"type": "string"},
                "examples": {
                  "success": {"externalValue": "/export-example.csv"}
                }
              }
            }
          }
        },
        "operationId": "getSimulationExport",
        "tags": ["simulations"]
      }
    }
  },
  "components": {
    "schemas": {
      "CaseSummary": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "properties": {
            "cConf": {"type": "number"},
            "cHosp": {"type": "number"},
            "cDeaths": {"type": "number"},
            "peakDeath": {"$ref": "#/components/schemas/ISODate"},
            "peakDailyDeath": {"type": "number"},
            "modelVersion": {"type": "string"}
          },
          "required": [
            "cConf",
            "cHosp",
            "cDeaths",
            "peakDeath",
            "peakDailyDeath"
          ],
          "additionalProperties": false
        }
      },
      "ExportFormat": {"type": "string", "enum": ["results", "crystalcast"]},
      "Intensity": {
        "type": "string",
        "enum": ["aggressive", "moderate", "mild"]
      },
      "InterventionPeriod": {
        "type": "object",
        "properties": {
          "startDate": {
            "$ref": "#/components/schemas/ISODate",
            "description": "An ISO-8601 string encoding the date that these interventions begin."
          },
          "socialDistancing": {
            "$ref": "#/components/schemas/Intensity",
            "description": "The level of social distancing in the region."
          },
          "schoolClosure": {
            "$ref": "#/components/schemas/Intensity",
            "description": "The level of school closure in the region."
          },
          "caseIsolation": {
            "$ref": "#/components/schemas/Intensity",
            "description": "The level to which individuals with symptoms self-isolate."
          },
          "voluntaryHomeQuarantine": {
            "$ref": "#/components/schemas/Intensity",
            "description": "The level to which entire households self-isolate when one member\nof the household has symptoms."
          },
          "reductionPopulationContact": {
            "type": "number",
            "description": "The estimated reduction in population contact resulting from\nall of the above interventions. Some models require this generalized\nparameter instead of the individual interventions."
          }
        },
        "required": ["startDate", "reductionPopulationContact"],
        "additionalProperties": false
      },
      "ISODate": {"type": "string", "format": "date", "example": "2020-03-06"},
      "ModelInput": {
        "type": "object",
        "properties": {
          "region": {"$ref": "#/components/schemas/Region"},
          "subregion": {"$ref": "#/components/schemas/Subregion"},
          "parameters": {"$ref": "#/components/schemas/ModelParameters"}
        },
        "required": ["region", "parameters"],
        "additionalProperties": false
      },
      "ModelOutput": {
        "type": "object",
        "properties": {
          "metadata": {"$ref": "#/components/schemas/ModelInput"},
          "model": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "A short display name to identify the model"
              },
              "modelVersion": {
                "type": "string",
                "description": "A version number identifying the version of the model used in this run."
              },
              "connectorVersion": {
                "type": "string",
                "description": "A version number identifying the version of the connector used in this run.\nThis may be the same as modelVersion if development of the two is closely-linked."
              }
            },
            "required": ["name", "modelVersion", "connectorVersion"],
            "additionalProperties": false
          },
          "time": {
            "type": "object",
            "properties": {
              "t0": {
                "type": "string",
                "description": "An ISO-8601 string encoding the date that each timeseries begins."
              },
              "timestamps": {
                "type": "array",
                "items": {"type": "number"},
                "description": "The timestamps that correspond to every series of metrics.\nEach value is a number of days after `t0`."
              },
              "extent": {
                "type": "array",
                "minItems": 2,
                "items": [{"type": "number"}, {"type": "number"}],
                "maxItems": 2,
                "description": "The minimum and maximum timestamps for the series of reported metrics.\nEach value is a number of days after `t0`."
              }
            },
            "required": ["t0", "timestamps", "extent"],
            "additionalProperties": false
          },
          "aggregate": {
            "type": "object",
            "properties": {
              "metrics": {"$ref": "#/components/schemas/SeverityMetrics"}
            },
            "required": ["metrics"],
            "additionalProperties": false
          }
        },
        "required": ["metadata", "model", "time", "aggregate"],
        "additionalProperties": false
      },
      "ModelParameters": {
        "type": "object",
        "properties": {
          "calibrationDate": {
            "$ref": "#/components/schemas/ISODate",
            "description": "An ISO-8601 string encoding the date of the most recent case data in the region."
          },
          "calibrationCaseCount": {
            "type": "number",
            "description": "The total number of confirmed cases in the region before the calibration date."
          },
          "calibrationDeathCount": {
            "type": "number",
            "description": "The total number of deaths in the region before the calibration date."
          },
          "r0": {
            "type": "number",
            "description": "The assumed reproduction number for the virus. If this is null, then each\nmodel will use its own default value.",
            "nullable": true
          },
          "interventionPeriods": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/InterventionPeriod"},
            "description": "A list of time periods, each with a different set of interventions."
          }
        },
        "required": [
          "calibrationDate",
          "calibrationCaseCount",
          "calibrationDeathCount",
          "r0",
          "interventionPeriods"
        ],
        "additionalProperties": false
      },
      "ModelRun": {
        "type": "object",
        "properties": {
          "model_slug": {"type": "string"},
          "status": {"$ref": "#/components/schemas/RunStatus"},
          "results_data": {"type": "string", "nullable": true},
          "export_location": {"type": "string", "nullable": true}
        },
        "required": ["model_slug", "status", "results_data", "export_location"],
        "additionalProperties": false
      },
      "NewModelRunConfig": {
        "type": "object",
        "properties": {
          "model_slug": {"type": "string", "example": "mrc-ide-covid-sim"},
          "config": {"$ref": "#/components/schemas/ModelInput"}
        },
        "required": ["model_slug", "config"],
        "additionalProperties": false
      },
      "NewSimulationConfig": {
        "type": "object",
        "properties": {
          "regionID": {"$ref": "#/components/schemas/Region"},
          "subregionID": {"$ref": "#/components/schemas/Subregion"},
          "label": {"type": "string"},
          "r0": {"type": "number", "example": 1},
          "customCalibrationDate": {"$ref": "#/components/schemas/ISODate"},
          "interventionPeriods": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/InterventionPeriod"}
          }
        },
        "required": ["regionID", "label", "interventionPeriods"],
        "additionalProperties": false,
        "description": "The data sent from web UI to backend"
      },
      "Region": {"type": "string", "example": "US"},
      "RunStatus": {
        "type": "string",
        "enum": ["pending", "in-progress", "complete", "unsupported", "failed"]
      },
      "SeverityMetrics": {
        "type": "object",
        "properties": {
          "Mild": {
            "type": "array",
            "items": {"type": "number"},
            "description": "Current number of mild cases on this day"
          },
          "ILI": {
            "type": "array",
            "items": {"type": "number"},
            "description": "Current number of influenza-like illness cases on this day (assume represents GP demand)"
          },
          "SARI": {
            "type": "array",
            "items": {"type": "number"},
            "description": "Current number of Severe Acute Respiratory Illness cases on this day (assume represents hospital demand)"
          },
          "Critical": {
            "type": "array",
            "items": {"type": "number"},
            "description": "Current number of critical cases on this day (assume represents ICU demand)"
          },
          "CritRecov": {
            "type": "array",
            "items": {"type": "number"},
            "description": "Current number of critical cases on this day who are well enough to leave the ICU but still need a hospital bed"
          },
          "incDeath": {
            "type": "array",
            "items": {"type": "number"},
            "description": "Number of deaths occurring on this day"
          },
          "cumMild": {
            "type": "array",
            "items": {"type": "number"},
            "description": "Total number of mild cases since the beginning of the epidemic"
          },
          "cumILI": {
            "type": "array",
            "items": {"type": "number"},
            "description": "Total number of influenza-like illnesses since the beginning of the epidemic"
          },
          "cumSARI": {
            "type": "array",
            "items": {"type": "number"},
            "description": "Total number of severe acute respiratory illnesses since the beginning of the epidemic"
          },
          "cumCritical": {
            "type": "array",
            "items": {"type": "number"},
            "description": "Total number of critical cases since the beginning of the epidemic"
          },
          "cumCritRecov": {
            "type": "array",
            "items": {"type": "number"},
            "description": "Total number of patients recovered from critical cases since the beginning of the epidemic"
          },
          "R": {
            "type": "array",
            "items": {"type": "number"},
            "description": "R-number on this day"
          }
        },
        "required": [
          "Mild",
          "ILI",
          "SARI",
          "Critical",
          "CritRecov",
          "incDeath",
          "cumMild",
          "cumILI",
          "cumSARI",
          "cumCritical",
          "cumCritRecov"
        ],
        "additionalProperties": false
      },
      "SimulationSummary": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {"$ref": "#/components/schemas/RunStatus"},
          "configurationSummary": {"type": "string"},
          "id": {"type": "number"},
          "region_name": {"type": "string"},
          "subregion_name": {"type": "string"},
          "region_id": {"type": "string"},
          "subregion_id": {"type": "string"},
          "github_user_id": {"type": "number"},
          "github_user_login": {"type": "string"},
          "model_runs": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/ModelRun"}
          },
          "label": {"type": "string"},
          "created_at": {"type": "string"},
          "updated_at": {"type": "string"}
        },
        "required": [
          "configurationSummary",
          "created_at",
          "github_user_id",
          "github_user_login",
          "id",
          "label",
          "model_runs",
          "region_id",
          "region_name",
          "status",
          "updated_at"
        ]
      },
      "Subregion": {"type": "string", "example": "US-AK"}
    },
    "securitySchemes": {
      "token": {
        "type": "http",
        "in": "header",
        "name": "Authorization",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Primary authentication method for programmatic use."
      },
      "session": {
        "type": "http",
        "in": "cookie",
        "name": "session",
        "description": "For use in UI. Also requires valid session.sig cookie"
      }
    }
  }
}
