#!/usr/bin/env node

const fs = require('fs')
const path = require('path')
const argv = require('yargs')
  .usage('Usage: $0 --cache-dir [dir] --force')

  .help('h')
  .alias('h', 'help')

  .nargs('c', 1)
  .alias('c', 'cache-dir')
  .describe('c', 'Directory to cache results')

  .boolean('d')
  .alias('d', 'dry-run')
  .describe('f', 'Download and process files, but do not store to database')

  .boolean('f')
  .alias('f', 'force')
  .describe('f', 'Force results even though error check has failed')

  .epilog(
    `
  Download public datasets for covid-19 cases and policy interventions, format these datasets, and write them to MySQL.

  Optionally, pass a path to a dir where downloads should be cached and the results should be written as JSON files.

  To store the results in MySQL, set these environment variables:
  DB_HOST, DB_USERNAME, DB_PASSWORD, DB_DATABASE`
  )
  .version(false).argv

require('ts-node').register({
  project: path.join(__dirname, '../tsconfig.json'),
  compilerOptions: {
    module: 'commonjs'
  }
})

const mysql = require('../lib/mysql')
const fetchData = require('../lib/data/fetch')

const main = mysql.withDB(db => async () => {
  const isError = await fetchData.fetchData(db, argv.cacheDir, argv.force, argv.dryRun)
  if (isError) {
    process.exit(1)
  }

})

main()
  .then(() => {
    process.exit(0)
  })
  .catch(error => {
    console.error(error)
    process.exit(1)
  })
